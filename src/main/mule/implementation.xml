<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<validation:config name="Validation_Config" doc:name="Validation Config" doc:id="f4e1c847-878a-47f0-83c4-6130da3578e8" />
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP_Request_configuration" doc:id="1399923a-7838-489d-a45f-33c939304539" basePath="/sapi/sapidatabase/v1">
		<http:request-connection host="localhost" port="8081" >
		</http:request-connection>
	</http:request-config>
	<file:config name="clients" doc:name="File Config" doc:id="51e1efd5-65c2-4f02-8eef-2f7ce408eebf" />

	<os:object-store name="stored_users" doc:name="Object store" doc:id="4eca8b09-e766-4317-9aaf-b61a3820c71b" expirationInterval="5"/>
	<flow name="create-user" doc:id="8af9fd76-c19f-406b-bc2b-e62e6d27d9c4" >
		<set-variable value="#[payload]" doc:name="user" doc:id="9f207a32-1def-4185-87af-0ae0e70eb7cd" variableName="user" />
		<http:request method="GET" doc:name="Request Users " doc:id="bf31ee38-48fc-44d3-916a-e53fa1f32ebf" config-ref="HTTP_Request_configuration" path="/api/users">
					<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"manager_id" : payload.manager_id
}]]]></http:query-params>
				</http:request>
		<set-variable value="#[payload.manager_id]" doc:name="manager_id_all" doc:id="0f4d0deb-23ac-4e2d-a3a6-4c9697de1bcb" variableName="manager_id_all" />
		<choice doc:name="Update or Create" doc:id="1a4b239e-37c5-4744-8a27-a45b91f2ef54" >
			<when expression="#[output application/json&#10;---&#10;(payload.manager_id == null) or (payload.email contains vars.user.emailAdresse)]">
				<http:request method="GET" doc:name="Request Users " doc:id="b3b50b5c-575d-48a4-93cd-a3e40122f22e" config-ref="HTTP_Request_configuration" path="/api/users">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
---
{
	"email" : vars.user.emailAdresse
}]]]></http:query-params>
		</http:request>
				<http:request method="PUT" doc:name="Request  Update " doc:id="909e2bb2-640e-4282-84b6-0fbd0a024d36" config-ref="HTTP_Request_configuration" path="/api/users/{id}" >
					<http:body ><![CDATA[#[output application/json
---
{
	"email" : vars.user.emailAdresse,
	"firstName": vars.user.vorname,
	"lastName": vars.user.nachname,
	"manager_id": 1,
	"address": {
		"street": vars.user."straße",
		"city": vars.user.Geburtsort
	},
	"dob": vars.user.Geburtstag,
	"updated_at": "2023-10-10T21:30:00.000Z",
	"initials": "JD"
}]]]></http:body>
					<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
					<http:uri-params ><![CDATA[#[output application/java
---
{
	"id" : payload.id[0]
}]]]></http:uri-params>
				</http:request>
				<ee:transform doc:name="output Payload" doc:id="03e5ee76-4c27-40d4-902e-f98a42dbfbf7" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "User was updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<http:request method="POST" doc:name="Request  Create" doc:id="58b3e52f-6fc5-4530-8c06-462a695f1e7d" config-ref="HTTP_Request_configuration" path="/api/users" >
					<http:body ><![CDATA[#[output application/json
---
{
	"email" : vars.user.emailAdresse,
	"firstName": vars.user.vorname,
	"lastName": vars.user.nachname,
	"manager_id": 1,
	"address": {
		"street": vars.user."straße",
		"city": vars.user.Geburtsort
	},
	"dob": vars.user.Geburtstag,
	"updated_at": "2023-10-10T21:30:00.000Z",
	"initials": "JD"
}]]]></http:body>
					<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
				</http:request>
				<ee:transform doc:name="output Payload" doc:id="ed7efce5-2291-4e09-97a3-c4945c828f7e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "User was created"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="retrive-users-and-write-to-csv" doc:id="a62e5c46-493c-46c8-847c-9440e3f2fb4b" >
		<scheduler doc:name="Trigger every 5 minutes" doc:id="e71fedbd-ae38-43bb-94cf-6b51762c12a7" >
			<scheduling-strategy >
				<cron expression="${cron.expression}" timeZone="${cron.time_zone}" />
			
</scheduling-strategy>
		</scheduler>
		<os:retrieve doc:name="Retrieve user with update_at" doc:id="f1332c47-2ceb-43fc-b83f-3b4cfdaaa206" objectStore="stored_users" key="updated_at">
			<os:default-value ><![CDATA[#["1970-01-01T00:00:00"]]]></os:default-value>
		</os:retrieve>
		<set-variable value="#[now()]" doc:name="lastTriggerTime" doc:id="20e4077d-2371-4a27-a2f5-74f664343a23" variableName="lastTriggerTime"/>
		<http:request method="GET" doc:name="Request Users " doc:id="60ca4cfa-ca71-4528-ae64-1c2ff3813860" config-ref="HTTP_Request_configuration" path="/api/users">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="filtered Users from DB" doc:id="11af7f92-b97c-4286-a570-438428f1f9a4" >
			<ee:message >
				<ee:set-payload ><![CDATA[output application/json
---
{
    "filteredUsers": (payload filter (user) -> user.updated_at >= vars.lastTriggerTime) map (user) ->
    {
        "id": user.id,
        "email": user.email,
        "firstName": user.firstName,
        "lastName": user.lastName,
        "manager_id": user.manager_id,
        "street": user.street,
        "city": user.city,
        "dob": user.dob,
        "updated_at": user.updated_at,
        "initials": user.initials
   }
   }
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<file:write doc:name="Write-users-to-csv" doc:id="353158a5-a341-4e48-96a1-b4d18c5df477" config-ref="clients" path="C:\Users\DominikZovko\Desktop\user.csv">
			<file:content ><![CDATA[#[%dw 2.0
output application/csv quoteValues=true
---
payload.filteredUsers map (user) ->
{
    "id": user.id,
    "email": user.email,
    "firstName": user.firstName,
    "lastName": user.lastName,
    "manager_id": user.manager_id,
    "street": user.street,
    "city": user.city,
    "dob": user.dob,
    "updated_at": user.updated_at,
    "initials": user.initials
}]]]></file:content>

    </file:write>
		<os:store doc:name="Store user with update_at" doc:id="54a16cf9-68f1-4ae6-96ab-44e0e32c7869" key="updated_at" objectStore="stored_users" >
			<os:value ><![CDATA[#[%dw 2.0
output application/json
---
payload.filteredUsers map (user) ->
{
    "updated_at": {
        dateTime: user.updated_at as LocalDateTime {format: "yyyy-MM-dd'T'HH:mm:ss"}
    }
}]]]></os:value>
		</os:store>

</flow>

</mule>
