<!-- [STUDIO:"Create or Update User"]<?xml version="1.0" encoding="UTF-8"?> [STUDIO] -->

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<validation:config name="Validation_Config" doc:name="Validation Config" doc:id="f4e1c847-878a-47f0-83c4-6130da3578e8" />
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP_Request_configuration" doc:id="1399923a-7838-489d-a45f-33c939304539" basePath="/sapi/sapidatabase/v1">
		<http:request-connection host="localhost" port="8081" >
		</http:request-connection>
	</http:request-config>
	<file:config name="clients" doc:name="File Config" doc:id="51e1efd5-65c2-4f02-8eef-2f7ce408eebf" />

	<os:object-store name="stored_users" doc:name="Object store" doc:id="4eca8b09-e766-4317-9aaf-b61a3820c71b" expirationInterval="5"/>
	<flow name="create-user" doc:id="8af9fd76-c19f-406b-bc2b-e62e6d27d9c4" >
		<logger level="INFO" doc:name="Start Log" doc:id="f68fe589-d4a5-472f-8cf9-42d25165bae0" message="The create-user-flow has started"/>
		<set-variable value="#[payload]" doc:name="user" doc:id="9f207a32-1def-4185-87af-0ae0e70eb7cd" variableName="user" />
		<http:request method="GET" doc:name="Request Users " doc:id="bf31ee38-48fc-44d3-916a-e53fa1f32ebf" config-ref="HTTP_Request_configuration" path="/api/users">
					<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"manager_id" : payload.manager_id
}]]]></http:query-params>
				</http:request>
		<set-variable value="#[payload.manager_id]" doc:name="manager_id_all" doc:id="0f4d0deb-23ac-4e2d-a3a6-4c9697de1bcb" variableName="manager_id_all" />
		<choice doc:name="Update or Create" doc:id="1a4b239e-37c5-4744-8a27-a45b91f2ef54" >
			<when expression="#[output application/json&#10;---&#10; payload.email contains vars.user.emailAdresse]">
				<http:request method="GET" doc:name="Request Users " doc:id="b3b50b5c-575d-48a4-93cd-a3e40122f22e" config-ref="HTTP_Request_configuration" path="/api/users">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
---
{
	"email" : vars.user.emailAdresse
}]]]></http:query-params>
		</http:request>
				<flow-ref doc:name="update-SubFlow" doc:id="107a7e1f-e8a5-4624-89bc-0c5865917713" name="update-SubFlow" />
			</when>
			<otherwise >
				<flow-ref doc:name="create-subFlow" doc:id="bd581d72-7b05-48af-b713-4857bd77f2ff" name="create-subFlow" />
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="update-SubFlow" doc:id="f7192b0e-85e1-4ca3-a170-9542bcf38ebd" >
		<http:request method="PUT" doc:name="Request  Update " doc:id="e7c89b13-4ba6-4fff-a4c2-6fb0f50e3fbc" config-ref="HTTP_Request_configuration" path="/api/users/{id}">
			<http:body ><![CDATA[#[output application/json
---
{
	"email" : vars.user.emailAdresse,
	"firstName": vars.user.vorname,
	"lastName": vars.user.nachname,
	"manager_id": 1,
	"address": {
		"street": vars.user."straße",
		"city": vars.user.Geburtsort
	},
	"dob": vars.user.Geburtstag,
	"updated_at": "2023-10-10T21:30:00.000Z",
	"initials": "JD"
}]]]></http:body>
			<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"id" : payload.id[0]
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="output Payload" doc:id="d5b73dd1-27c8-4661-8989-ac04da8cd097" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "User was updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	
	</sub-flow>
	<sub-flow name="create-subFlow" doc:id="9dd37812-ebaf-4198-907d-e96ed7603c4c" >

		<http:request method="POST" doc:name="Request Create" doc:id="20f38065-6a09-49c0-9d3f-2edde4d7f916" config-ref="HTTP_Request_configuration" path="/api/users">
			<http:body ><![CDATA[#[output application/json
---
{
	"email" : vars.user.emailAdresse,
	"firstName": vars.user.vorname,
	"lastName": vars.user.nachname,
	"manager_id": 1,
	"address": {
		"street": vars.user."straße",
		"city": vars.user.Geburtsort
	},
	"dob": vars.user.Geburtstag,
	"updated_at": "2023-10-10T21:30:00.000Z",
	"initials": "JD"
}]]]></http:body>
			<http:headers ><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="output Payload" doc:id="3b9158f7-1543-4e75-9fec-42ce962eb61b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : "User was created"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
	</sub-flow>
	<flow name="retrive-users-and-write-to-csv" doc:id="a62e5c46-493c-46c8-847c-9440e3f2fb4b" >
    <scheduler doc:name="Scheduler every 5 minutes" doc:id="1c975297-6ea7-46a8-beb9-e0546a4fa924" >
        <scheduling-strategy >
            <fixed-frequency frequency="20" timeUnit="SECONDS"/>
        </scheduling-strategy>
    </scheduler>
    <set-variable value="#[now()]" doc:name="lastTriggerTime" doc:id="20e4077d-2371-4a27-a2f5-74f664343a23" variableName="lastTriggerTime"/>
		<http:request method="GET" doc:name="Request Users " doc:id="60ca4cfa-ca71-4528-ae64-1c2ff3813860" config-ref="HTTP_Request_configuration" path="/api/users">
			<http:headers><![CDATA[#[output application/java
---
{
	"client_secret" : "abcd",
	"client_id" : "1234"
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="filteredUsers" doc:id="11af7f92-b97c-4286-a570-438428f1f9a4" >
			<ee:message >
				<ee:set-payload ><![CDATA[output application/json
---
{
    "filteredUsers": (payload filter (user) -> user.updated_at >= vars.lastTriggerTime) map (user) ->
    {
        "id": user.id,
        "email": user.email,
        "firstName": user.firstName,
        "lastName": user.lastName,
        "manager_id": user.manager_id,
        "street": user.street,
        "city": user.city,
        "dob": user.dob,
        "updated_at": user.updated_at,
        "initials": user.initials
   }
   }
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:store doc:name="Store user" doc:id="54a16cf9-68f1-4ae6-96ab-44e0e32c7869" key="user" objectStore="stored_users" />
    <os:retrieve-all doc:name="Retrieve all users" doc:id="c3b8f77d-f090-4041-9071-0bc20a8b77ab" objectStore="stored_users"/>
    <ee:transform doc:name="output to CSV" doc:id="3d378362-087e-4d61-9293-c34fa5c0f886" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/csv
---
if (payload.users is Array)
    payload.users
else
    [payload.users] map (user) ->
        {
            "id": user.id,
            "email": user.email,
            "firstName": user.firstName,
            "lastName": user.lastName,
            "manager_id": user.manager_id,
            "street": user.street,
            "city": user.city,
            "dob": user.dob,
            "updated_at": user.updated_at,
            "initials": user.initials
        }
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<file:write doc:name="write-users" doc:id="353158a5-a341-4e48-96a1-b4d18c5df477" config-ref="clients" path="C:\Users\DominikZovko\Desktop\user.csv" mode="APPEND">
    </file:write>

</flow>

</mule>
